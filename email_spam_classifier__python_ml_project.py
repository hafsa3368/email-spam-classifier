# -*- coding: utf-8 -*-
"""Email Spam Classifier |Python Ml Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XMykGxSUIJoXkwbq4eocq3YmvF_G7MDD
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import os

df=pd.read_csv("/content/mail_data.csv")

print(df)

""" **Replaces all missing values (NaN) in a DataFrame**"""

data = df.fillna('')
data.head()

data.info()

"""**Check total  Number of rows & columns**"""

data.shape

data.loc[data['Category'] == "spam", 'Category'] = 0
data.loc[data['Category'] == "ham",  'Category'] = 1
X=data['Message']
Y=data['Category']

print(Y)

print(X)

"""**Splitting Data into test and training **





"""

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=3)

print(X.shape)
print(X_test.shape)
print(X_train.shape)

print(Y.shape)
print(Y_test.shape)
print(Y_train.shape)

"""# feature_extraction



"""

feature_extraction=TfidfVectorizer(min_df=1,stop_words='english',lowercase=True)
X_train_feature=feature_extraction.fit_transform(X_train)
X_test_feature = feature_extraction.transform(X_test)
Y_train=Y_train.astype('int')
Y_test=Y_test.astype('int')

print(X_train)

print(X_train_feature)

"""# Model

"""

model=LogisticRegression()
model.fit(X_train_feature,Y_train)

"""# Accuracy_on_training_data"""

prediction_on_training_data=model.predict(X_train_feature)
accuracy_on_training_data=accuracy_score(Y_train,prediction_on_training_data)

print("Accuracy on training data:",accuracy_on_training_data)

"""# Accuracy_on_test_data"""

prediction_on_test_data = model.predict(X_test_feature)
accuracy_on_test_data = accuracy_score(Y_test, prediction_on_test_data)
print("Accuracy on training data:",accuracy_on_test_data)

input_u_mail=["WINNER!! As a valued network customer you have been selected to receivea Â£900 prize reward! To claim..."]
input_data_feature=feature_extraction.transform(input_u_mail)
prediction=model.predict(input_data_feature)
print(prediction)
if (prediction[0]==1):
 print("Ham mail")
else:
 print("spam mail")